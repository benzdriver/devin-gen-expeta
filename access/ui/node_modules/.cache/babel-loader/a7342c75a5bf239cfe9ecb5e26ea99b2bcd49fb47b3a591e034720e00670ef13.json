{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/context/ExpetaContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * @file ExpetaContext.js\n * @description Expeta功能上下文，管理全局状态和操作\n * \n * 需求:\n * 1. 简化现有ExpetaContext，专注于全局状态\n * 2. 提供对期望和生成结果的访问\n * 3. 管理系统级操作和状态\n * 4. 与ConversationContext协作\n * \n * 提供的上下文值:\n * - expectations: 已确认的期望列表\n * - generations: 代码生成结果列表\n * - generateCode: 从期望生成代码的函数\n * - loadExpectations: 加载期望的函数\n * - loadGenerations: 加载生成结果的函数\n */\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { expectationService, generationService, systemService } from '../services/api';\n// 导入其他必要依赖\n\n// Devin: 请在此实现ExpetaContext\n\n// 创建上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpetaContext = /*#__PURE__*/createContext();\n\n// 上下文Provider组件\nexport const ExpetaProvider = ({\n  children\n}) => {\n  _s();\n  // 基础状态\n  const [expectations, setExpectations] = useState([]);\n  const [generations, setGenerations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 初始化状态时提供默认值\n  const [systemStats, setSystemStats] = useState({\n    expectations: {\n      total: 0,\n      completed: 0\n    },\n    generations: {\n      total: 0,\n      completed: 0\n    },\n    validations: {\n      total: 0,\n      passed: 0\n    }\n  });\n\n  // 加载期望列表\n  const loadExpectations = async () => {\n    try {\n      setLoading(true);\n      const response = await expectationService.getExpectations();\n      setExpectations(response.data);\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载期望失败');\n      console.error('加载期望失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载生成历史\n  const loadGenerations = async () => {\n    try {\n      setLoading(true);\n      const response = await generationService.getGenerations();\n      setGenerations(response.data);\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成历史失败');\n      console.error('加载生成历史失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载系统统计数据\n  const loadSystemStats = async () => {\n    try {\n      setLoading(true);\n      const response = await systemService.getSystemStats();\n      setSystemStats(response.data);\n      return response;\n    } catch (err) {\n      setError(err.message || '加载系统统计失败');\n      console.error('加载系统统计失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载系统健康状态\n  const loadHealth = async () => {\n    try {\n      setLoading(true);\n      const response = await systemService.getSystemHealth();\n      return response;\n    } catch (err) {\n      setError(err.message || '加载系统健康状态失败');\n      console.error('加载系统健康状态失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 提供的上下文值\n  const value = {\n    expectations,\n    generations,\n    loading,\n    error,\n    loadExpectations,\n    loadGenerations,\n    systemStats,\n    loadSystemStats,\n    loadHealth\n  };\n  return /*#__PURE__*/_jsxDEV(ExpetaContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n\n// 自定义hook\n_s(ExpetaProvider, \"jtKORjKTvg/ZgPqblVibse/6dEU=\");\n_c = ExpetaProvider;\nexport const useExpeta = () => {\n  _s2();\n  const context = useContext(ExpetaContext);\n  if (!context) {\n    throw new Error('useExpeta必须在ExpetaProvider内部使用');\n  }\n  return context;\n};\n_s2(useExpeta, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ExpetaContext;\nvar _c;\n$RefreshReg$(_c, \"ExpetaProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","expectationService","generationService","systemService","jsxDEV","_jsxDEV","ExpetaContext","ExpetaProvider","children","_s","expectations","setExpectations","generations","setGenerations","loading","setLoading","error","setError","systemStats","setSystemStats","total","completed","validations","passed","loadExpectations","response","getExpectations","data","err","message","console","loadGenerations","getGenerations","loadSystemStats","getSystemStats","loadHealth","getSystemHealth","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExpeta","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/context/ExpetaContext.js"],"sourcesContent":["/**\n * @file ExpetaContext.js\n * @description Expeta功能上下文，管理全局状态和操作\n * \n * 需求:\n * 1. 简化现有ExpetaContext，专注于全局状态\n * 2. 提供对期望和生成结果的访问\n * 3. 管理系统级操作和状态\n * 4. 与ConversationContext协作\n * \n * 提供的上下文值:\n * - expectations: 已确认的期望列表\n * - generations: 代码生成结果列表\n * - generateCode: 从期望生成代码的函数\n * - loadExpectations: 加载期望的函数\n * - loadGenerations: 加载生成结果的函数\n */\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { expectationService, generationService, systemService } from '../services/api';\n// 导入其他必要依赖\n\n// Devin: 请在此实现ExpetaContext\n\n// 创建上下文\nconst ExpetaContext = createContext();\n\n// 上下文Provider组件\nexport const ExpetaProvider = ({ children }) => {\n  // 基础状态\n  const [expectations, setExpectations] = useState([]);\n  const [generations, setGenerations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 初始化状态时提供默认值\n  const [systemStats, setSystemStats] = useState({\n    expectations: { total: 0, completed: 0 },\n    generations: { total: 0, completed: 0 },\n    validations: { total: 0, passed: 0 }\n  });\n\n  // 加载期望列表\n  const loadExpectations = async () => {\n    try {\n      setLoading(true);\n      const response = await expectationService.getExpectations();\n      setExpectations(response.data);\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载期望失败');\n      console.error('加载期望失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载生成历史\n  const loadGenerations = async () => {\n    try {\n      setLoading(true);\n      const response = await generationService.getGenerations();\n      setGenerations(response.data);\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成历史失败');\n      console.error('加载生成历史失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载系统统计数据\n  const loadSystemStats = async () => {\n    try {\n      setLoading(true);\n      const response = await systemService.getSystemStats();\n      setSystemStats(response.data);\n      return response;\n    } catch (err) {\n      setError(err.message || '加载系统统计失败');\n      console.error('加载系统统计失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 加载系统健康状态\n  const loadHealth = async () => {\n    try {\n      setLoading(true);\n      const response = await systemService.getSystemHealth();\n      return response;\n    } catch (err) {\n      setError(err.message || '加载系统健康状态失败');\n      console.error('加载系统健康状态失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 提供的上下文值\n  const value = {\n    expectations,\n    generations,\n    loading,\n    error,\n    loadExpectations,\n    loadGenerations,\n    systemStats,\n    loadSystemStats,\n    loadHealth\n  };\n\n  return <ExpetaContext.Provider value={value}>{children}</ExpetaContext.Provider>;\n};\n\n// 自定义hook\nexport const useExpeta = () => {\n  const context = useContext(ExpetaContext);\n  if (!context) {\n    throw new Error('useExpeta必须在ExpetaProvider内部使用');\n  }\n  return context;\n};\n\nexport default ExpetaContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}