{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport Dashboard from './pages/Dashboard';\nimport Requirements from './pages/Requirements';\nimport Expectations from './pages/Expectations';\nimport CodeGeneration from './pages/CodeGeneration';\nimport Validation from './pages/Validation';\nimport Memory from './pages/Memory';\nimport Settings from './pages/Settings';\nimport SemanticMediator from './pages/SemanticMediator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nfunction App() {\n  _s();\n  const [activePage, setActivePage] = useState('dashboard');\n  const [sessionId, setSessionId] = useState(null);\n  const [userData, setUserData] = useState({\n    name: '张明',\n    role: '系统管理员'\n  });\n  useEffect(() => {\n    const initApp = async () => {\n      try {\n        // 初始化会话\n        const response = await fetch(`${API_BASE_URL}/chat/session`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user_message: 'Hello',\n            session_id: null\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to create session: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setSessionId(data.session_id);\n      } catch (error) {\n        console.error('Error initializing app:', error);\n      }\n    };\n    initApp();\n  }, []);\n  const renderActivePage = () => {\n    switch (activePage) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      case 'requirements':\n        return /*#__PURE__*/_jsxDEV(Requirements, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      case 'expectations':\n        return /*#__PURE__*/_jsxDEV(Expectations, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this);\n      case 'code-generation':\n        return /*#__PURE__*/_jsxDEV(CodeGeneration, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      case 'validation':\n        return /*#__PURE__*/_jsxDEV(Validation, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }, this);\n      case 'memory':\n        return /*#__PURE__*/_jsxDEV(Memory, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this);\n      case 'semantic-mediator':\n        return /*#__PURE__*/_jsxDEV(SemanticMediator, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this);\n      case 'settings':\n        return /*#__PURE__*/_jsxDEV(Settings, {\n          userData: userData,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          sessionId: sessionId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activePage: activePage,\n      setActivePage: setActivePage,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: getPageTitle(activePage),\n        sessionId: sessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: activePage,\n        className: \"content-area page\",\n        children: renderActivePage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+APFB93nDjyXx0ugYQJgLdXU0k=\");\n_c = App;\nfunction getPageTitle(page) {\n  switch (page) {\n    case 'dashboard':\n      return '仪表盘';\n    case 'requirements':\n      return '需求管理';\n    case 'expectations':\n      return '期望管理';\n    case 'code-generation':\n      return '代码生成';\n    case 'validation':\n      return '验证结果';\n    case 'memory':\n      return '记忆系统';\n    case 'semantic-mediator':\n      return '语义中介层';\n    case 'settings':\n      return '系统设置';\n    default:\n      return '仪表盘';\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Header","Dashboard","Requirements","Expectations","CodeGeneration","Validation","Memory","Settings","SemanticMediator","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","activePage","setActivePage","sessionId","setSessionId","userData","setUserData","name","role","initApp","response","fetch","method","headers","body","JSON","stringify","user_message","session_id","ok","Error","statusText","data","json","error","console","renderActivePage","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","getPageTitle","id","_c","page","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Header from './components/Header';\nimport Dashboard from './pages/Dashboard';\nimport Requirements from './pages/Requirements';\nimport Expectations from './pages/Expectations';\nimport CodeGeneration from './pages/CodeGeneration';\nimport Validation from './pages/Validation';\nimport Memory from './pages/Memory';\nimport Settings from './pages/Settings';\nimport SemanticMediator from './pages/SemanticMediator';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction App() {\n  const [activePage, setActivePage] = useState('dashboard');\n  const [sessionId, setSessionId] = useState(null);\n  const [userData, setUserData] = useState({\n    name: '张明',\n    role: '系统管理员'\n  });\n\n  useEffect(() => {\n    const initApp = async () => {\n      try {\n        // 初始化会话\n        const response = await fetch(`${API_BASE_URL}/chat/session`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ \n            user_message: 'Hello',\n            session_id: null\n          }),\n        });\n        \n        if (!response.ok) {\n          throw new Error(`Failed to create session: ${response.statusText}`);\n        }\n        \n        const data = await response.json();\n        setSessionId(data.session_id);\n      } catch (error) {\n        console.error('Error initializing app:', error);\n      }\n    };\n    \n    initApp();\n  }, []);\n\n  const renderActivePage = () => {\n    switch (activePage) {\n      case 'dashboard':\n        return <Dashboard sessionId={sessionId} />;\n      case 'requirements':\n        return <Requirements sessionId={sessionId} />;\n      case 'expectations':\n        return <Expectations sessionId={sessionId} />;\n      case 'code-generation':\n        return <CodeGeneration sessionId={sessionId} />;\n      case 'validation':\n        return <Validation sessionId={sessionId} />;\n      case 'memory':\n        return <Memory sessionId={sessionId} />;\n      case 'semantic-mediator':\n        return <SemanticMediator sessionId={sessionId} />;\n      case 'settings':\n        return <Settings userData={userData} setUserData={setUserData} />;\n      default:\n        return <Dashboard sessionId={sessionId} />;\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Sidebar \n        activePage={activePage} \n        setActivePage={setActivePage} \n        userData={userData}\n      />\n      <main className=\"main-content\">\n        <Header \n          title={getPageTitle(activePage)} \n          sessionId={sessionId}\n        />\n        <div id={activePage} className=\"content-area page\">\n          {renderActivePage()}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nfunction getPageTitle(page) {\n  switch (page) {\n    case 'dashboard': return '仪表盘';\n    case 'requirements': return '需求管理';\n    case 'expectations': return '期望管理';\n    case 'code-generation': return '代码生成';\n    case 'validation': return '验证结果';\n    case 'memory': return '记忆系统';\n    case 'semantic-mediator': return '语义中介层';\n    case 'settings': return '系统设置';\n    default: return '仪表盘';\n  }\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}