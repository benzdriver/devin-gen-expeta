{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\n\n// 创建认证上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 认证Provider组件\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 加载时检查登录状态\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const response = await authService.getCurrentUser();\n          setCurrentUser(response.data);\n        }\n      } catch (err) {\n        console.error('Failed to load user:', err);\n        localStorage.removeItem('authToken');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n\n  // 登录\n  const login = async credentials => {\n    setError(null);\n    try {\n      const response = await authService.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // 保存认证令牌和用户信息\n      localStorage.setItem('authToken', token);\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // 注册\n  const register = async userData => {\n    setError(null);\n    try {\n      const response = await authService.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n\n      // 保存认证令牌和用户信息\n      localStorage.setItem('authToken', token);\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // 退出登录\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } finally {\n      // 无论API调用是否成功，都清除本地数据\n      localStorage.removeItem('authToken');\n      setCurrentUser(null);\n    }\n  };\n\n  // 提供的上下文值\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n\n// 自定义hook，方便获取认证上下文\n_s(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","loadUser","token","localStorage","getItem","response","getCurrentUser","data","err","console","removeItem","login","credentials","user","setItem","_err$response","_err$response$data","message","register","userData","_err$response2","_err$response2$data","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { authService } from '../services/api';\n\n// 创建认证上下文\nconst AuthContext = createContext();\n\n// 认证Provider组件\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 加载时检查登录状态\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n          const response = await authService.getCurrentUser();\n          setCurrentUser(response.data);\n        }\n      } catch (err) {\n        console.error('Failed to load user:', err);\n        localStorage.removeItem('authToken');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // 登录\n  const login = async (credentials) => {\n    setError(null);\n    try {\n      const response = await authService.login(credentials);\n      const { token, user } = response.data;\n      \n      // 保存认证令牌和用户信息\n      localStorage.setItem('authToken', token);\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Login failed');\n      throw err;\n    }\n  };\n\n  // 注册\n  const register = async (userData) => {\n    setError(null);\n    try {\n      const response = await authService.register(userData);\n      const { token, user } = response.data;\n      \n      // 保存认证令牌和用户信息\n      localStorage.setItem('authToken', token);\n      setCurrentUser(user);\n      return user;\n    } catch (err) {\n      setError(err.response?.data?.message || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // 退出登录\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } finally {\n      // 无论API调用是否成功，都清除本地数据\n      localStorage.removeItem('authToken');\n      setCurrentUser(null);\n    }\n  };\n\n  // 提供的上下文值\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// 自定义hook，方便获取认证上下文\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}