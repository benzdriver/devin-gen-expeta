{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * @file useGeneration.js\n * @description 代码生成的自定义Hook\n * \n * 需求:\n * 1. 封装代码生成逻辑，简化组件代码\n * 2. 管理生成状态和结果\n * 3. 处理生成请求和结果获取\n * 4. 提供进度更新通知\n * \n * 返回值:\n * - generation: 当前生成结果\n * - generateCode: 生成代码的函数\n * - progress: 生成进度\n * - downloadCode: 下载代码的函数\n * - loading: 加载状态\n * - error: 错误信息\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { generationService, expectationService } from '../services/api';\nimport webSocketService from '../services/WebSocketService';\n// 导入其他必要依赖\n\n/**\n * 代码生成的自定义Hook\n * @param {string} generationId 生成ID\n */\nconst useGeneration = generationId => {\n  _s();\n  const [generation, setGeneration] = useState(null);\n  const [expectation, setExpectation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 加载生成结果\n  const loadGeneration = useCallback(async id => {\n    if (!id) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await generationService.getGeneration(id);\n      setGeneration(response.data);\n\n      // 如果有关联的期望ID，加载期望信息\n      if (response.data.expectationId) {\n        try {\n          const expResponse = await expectationService.getExpectation(response.data.expectationId);\n          setExpectation(expResponse.data);\n        } catch (expError) {\n          console.error('加载期望信息失败:', expError);\n        }\n      }\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成结果失败');\n      console.error('加载生成结果失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 加载生成历史\n  const loadGenerations = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await generationService.getGenerations();\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成历史失败');\n      console.error('加载生成历史失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 下载代码\n  const downloadCode = useCallback(async id => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await generationService.downloadGeneration(id || generationId);\n\n      // 处理下载\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `generation-${id || generationId}.zip`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      return true;\n    } catch (err) {\n      setError(err.message || '下载代码失败');\n      console.error('下载代码失败:', err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }, [generationId]);\n\n  // 自动加载生成结果\n  useEffect(() => {\n    if (generationId) {\n      loadGeneration(generationId);\n    }\n  }, [generationId, loadGeneration]);\n  return {\n    generation,\n    expectation,\n    loading,\n    error,\n    loadGeneration,\n    loadGenerations,\n    downloadCode\n  };\n};\n_s(useGeneration, \"b5LkTvmqVX8rFPcBCHPvvacZbp4=\");\nexport default useGeneration;","map":{"version":3,"names":["useState","useEffect","useCallback","generationService","expectationService","webSocketService","useGeneration","generationId","_s","generation","setGeneration","expectation","setExpectation","loading","setLoading","error","setError","loadGeneration","id","response","getGeneration","data","expectationId","expResponse","getExpectation","expError","console","err","message","loadGenerations","getGenerations","downloadCode","downloadGeneration","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/hooks/useGeneration.js"],"sourcesContent":["/**\n * @file useGeneration.js\n * @description 代码生成的自定义Hook\n * \n * 需求:\n * 1. 封装代码生成逻辑，简化组件代码\n * 2. 管理生成状态和结果\n * 3. 处理生成请求和结果获取\n * 4. 提供进度更新通知\n * \n * 返回值:\n * - generation: 当前生成结果\n * - generateCode: 生成代码的函数\n * - progress: 生成进度\n * - downloadCode: 下载代码的函数\n * - loading: 加载状态\n * - error: 错误信息\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { generationService, expectationService } from '../services/api';\nimport webSocketService from '../services/WebSocketService';\n// 导入其他必要依赖\n\n/**\n * 代码生成的自定义Hook\n * @param {string} generationId 生成ID\n */\nconst useGeneration = (generationId) => {\n  const [generation, setGeneration] = useState(null);\n  const [expectation, setExpectation] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // 加载生成结果\n  const loadGeneration = useCallback(async (id) => {\n    if (!id) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await generationService.getGeneration(id);\n      setGeneration(response.data);\n      \n      // 如果有关联的期望ID，加载期望信息\n      if (response.data.expectationId) {\n        try {\n          const expResponse = await expectationService.getExpectation(response.data.expectationId);\n          setExpectation(expResponse.data);\n        } catch (expError) {\n          console.error('加载期望信息失败:', expError);\n        }\n      }\n      \n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成结果失败');\n      console.error('加载生成结果失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 加载生成历史\n  const loadGenerations = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await generationService.getGenerations();\n      return response.data;\n    } catch (err) {\n      setError(err.message || '加载生成历史失败');\n      console.error('加载生成历史失败:', err);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // 下载代码\n  const downloadCode = useCallback(async (id) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await generationService.downloadGeneration(id || generationId);\n      \n      // 处理下载\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `generation-${id || generationId}.zip`);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      return true;\n    } catch (err) {\n      setError(err.message || '下载代码失败');\n      console.error('下载代码失败:', err);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  }, [generationId]);\n\n  // 自动加载生成结果\n  useEffect(() => {\n    if (generationId) {\n      loadGeneration(generationId);\n    }\n  }, [generationId, loadGeneration]);\n\n  return {\n    generation,\n    expectation,\n    loading,\n    error,\n    loadGeneration,\n    loadGenerations,\n    downloadCode\n  };\n};\n\nexport default useGeneration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}