{"ast":null,"code":"/**\n * @file api.js\n * @description API服务，处理HTTP请求\n * \n * 需求:\n * 1. 更新现有API服务，支持新的会话和生成功能\n * 2. 保留认证相关功能\n * 3. 增加会话管理和消息发送API\n * 4. 支持代码生成和存储相关API\n * 5. 添加澄清器服务，处理需求澄清和期望生成\n * \n * 主要服务:\n * - authService: 认证相关API\n * - conversationService: 会话管理API\n * - expectationService: 期望管理API\n * - generationService: 代码生成API\n * - clarifierService: 需求澄清API\n */\n\nimport axios from 'axios';\n// 导入其他必要依赖\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加认证信息\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // 处理401未授权错误\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('authToken');\n    // 如果有路由，可以重定向到登录页\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 处理用户认证相关的API\nexport const authService = {\n  // 用户登录\n  login: credentials => {\n    return api.post('/api/auth/login', credentials);\n  },\n  // 用户注册\n  register: userData => {\n    return api.post('/api/auth/register', userData);\n  },\n  // 获取当前用户信息\n  getCurrentUser: () => {\n    return api.get('/api/auth/me');\n  },\n  // 退出登录\n  logout: () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('mockUser');\n    return Promise.resolve();\n  }\n};\n\n// 处理会话相关的API\nexport const conversationService = {\n  // 创建新会话\n  createConversation: () => {\n    return api.post('/api/conversations');\n  },\n  // 获取会话\n  getConversation: id => {\n    return api.get(`/api/conversations/${id}`);\n  },\n  // 发送消息\n  sendMessage: (conversationId, content) => {\n    return api.post(`/api/conversations/${conversationId}/messages`, {\n      content\n    });\n  },\n  // 确认期望\n  confirmExpectation: (conversationId, expectationId) => {\n    return api.post(`/api/conversations/${conversationId}/confirm`, {\n      expectationId\n    });\n  },\n  // 生成代码\n  generateCode: (conversationId, expectationId) => {\n    return api.post(`/api/conversations/${conversationId}/generate`, {\n      expectationId\n    });\n  },\n  // 获取会话列表\n  getConversations: () => {\n    return api.get('/api/conversations');\n  }\n};\n\n// 处理期望相关的API\nexport const expectationService = {\n  // 获取所有期望\n  getExpectations: () => {\n    return api.get('/api/expectations');\n  },\n  // 获取单个期望详情\n  getExpectation: id => {\n    return api.get(`/api/expectations/${id}`);\n  },\n  // 创建新期望\n  createExpectation: data => {\n    return api.post('/api/expectations', data);\n  },\n  // 更新期望\n  updateExpectation: (id, data) => {\n    return api.put(`/api/expectations/${id}`, data);\n  },\n  // 删除期望\n  deleteExpectation: id => {\n    return api.delete(`/api/expectations/${id}`);\n  }\n};\n\n// 处理代码生成相关的API\nexport const generationService = {\n  // 获取生成结果\n  getGeneration: id => {\n    return api.get(`/api/generations/${id}`);\n  },\n  // 获取生成历史\n  getGenerations: () => {\n    return api.get('/api/generations');\n  },\n  // 下载生成的代码\n  downloadGeneration: id => {\n    return api.get(`/api/generations/${id}/download`, {\n      responseType: 'blob'\n    });\n  }\n};\nexport const clarifierService = {\n  clarifyRequirement: requirementText => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const userInputLower = requirementText.toLowerCase();\n        let topLevelExpectation = {\n          name: \"Software Project\",\n          description: \"A software solution based on the provided requirements.\",\n          acceptance_criteria: [\"Must solve the core problem described\", \"Should be user-friendly and intuitive\"],\n          constraints: [\"Must be completed within reasonable timeframe\", \"Should follow industry best practices\"],\n          id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n          level: \"top\",\n          source_text: requirementText\n        };\n        let subExpectations = [];\n        if (userInputLower.includes('website') || userInputLower.includes('web app') || userInputLower.includes('homepage')) {\n          topLevelExpectation = {\n            name: \"Website Development\",\n            description: \"A responsive website that serves the specific needs and target audience.\",\n            acceptance_criteria: [\"Responsive design that works on mobile and desktop\", \"Clear navigation and user interface\", \"Content management capabilities\"],\n            constraints: [\"Must follow web accessibility guidelines\", \"Should load quickly on various devices and connections\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          subExpectations = [{\n            name: \"Frontend UI Components\",\n            description: \"User interface components for the website.\",\n            acceptance_criteria: [\"Responsive layout that adapts to different screen sizes\", \"Consistent design language across all pages\", \"Interactive elements with appropriate feedback\"],\n            constraints: [\"Must be accessible according to WCAG standards\", \"Should be cross-browser compatible\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"Content Management\",\n            description: \"System for managing website content.\",\n            acceptance_criteria: [\"Ability to add, edit, and delete content\", \"Support for different content types (text, images, etc.)\", \"Preview functionality before publishing\"],\n            constraints: [\"Must be user-friendly for non-technical users\", \"Should support content versioning\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"Performance Optimization\",\n            description: \"Optimizations to ensure fast loading and smooth operation.\",\n            acceptance_criteria: [\"Page load time under 3 seconds on average connections\", \"Optimized assets (images, scripts, styles)\", \"Caching strategy for improved performance\"],\n            constraints: [\"Must maintain visual quality while optimizing\", \"Should not sacrifice functionality for speed\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }];\n        } else if (userInputLower.includes('app') || userInputLower.includes('mobile')) {\n          topLevelExpectation = {\n            name: \"Mobile Application\",\n            description: \"A mobile app that delivers value to users on iOS and/or Android platforms.\",\n            acceptance_criteria: [\"Intuitive user interface\", \"Core functionality works offline\", \"Efficient performance on target devices\"],\n            constraints: [\"Must comply with app store guidelines\", \"Should minimize battery usage\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          subExpectations = [{\n            name: \"User Interface Design\",\n            description: \"Design of the app's user interface and experience.\",\n            acceptance_criteria: [\"Follows platform design guidelines (Material Design/Human Interface)\", \"Consistent visual language throughout the app\", \"Intuitive navigation and interaction patterns\"],\n            constraints: [\"Must be accessible to users with disabilities\", \"Should support different device sizes and orientations\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"Offline Functionality\",\n            description: \"Features that work without an internet connection.\",\n            acceptance_criteria: [\"Core features available offline\", \"Data synchronization when connection is restored\", \"Clear indication of online/offline status\"],\n            constraints: [\"Must handle conflict resolution during sync\", \"Should minimize storage usage\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"Performance Optimization\",\n            description: \"Optimizations for smooth operation and battery efficiency.\",\n            acceptance_criteria: [\"App launches within 3 seconds\", \"Smooth scrolling and transitions (60fps)\", \"Minimal battery impact during normal usage\"],\n            constraints: [\"Must work on devices up to 3 years old\", \"Should not exceed reasonable memory usage\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }];\n        } else if (userInputLower.includes('api') || userInputLower.includes('backend')) {\n          topLevelExpectation = {\n            name: \"API/Backend System\",\n            description: \"A robust backend system to support application needs with secure and efficient data processing.\",\n            acceptance_criteria: [\"Secure authentication and authorization\", \"Well-documented API endpoints\", \"Efficient data processing\"],\n            constraints: [\"Must handle expected load\", \"Should implement proper error handling\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          subExpectations = [{\n            name: \"Authentication System\",\n            description: \"System for user authentication and authorization.\",\n            acceptance_criteria: [\"Secure user registration and login\", \"Role-based access control\", \"Token-based authentication with refresh capability\"],\n            constraints: [\"Must follow security best practices (OWASP)\", \"Should support multiple authentication methods\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"API Design\",\n            description: \"Design and implementation of API endpoints.\",\n            acceptance_criteria: [\"RESTful or GraphQL API following best practices\", \"Consistent response format\", \"Comprehensive error handling\"],\n            constraints: [\"Must be versioned for future compatibility\", \"Should be rate-limited to prevent abuse\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }, {\n            name: \"Data Processing\",\n            description: \"Systems for processing and storing data.\",\n            acceptance_criteria: [\"Efficient database queries and operations\", \"Data validation and sanitization\", \"Backup and recovery procedures\"],\n            constraints: [\"Must ensure data integrity\", \"Should optimize for query performance\"],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"sub\",\n            parent_id: topLevelExpectation.id\n          }];\n        }\n        resolve({\n          data: {\n            top_level_expectation: topLevelExpectation,\n            sub_expectations: subExpectations,\n            process_metadata: {\n              timestamp: new Date().toISOString(),\n              version: \"1.0\"\n            }\n          }\n        });\n      }, 1000);\n    });\n  },\n  getClarificationHistory: () => {\n    return api.get('/api/clarifier/history');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","authService","login","credentials","post","register","userData","getCurrentUser","get","logout","resolve","conversationService","createConversation","getConversation","id","sendMessage","conversationId","content","confirmExpectation","expectationId","generateCode","getConversations","expectationService","getExpectations","getExpectation","createExpectation","data","updateExpectation","put","deleteExpectation","delete","generationService","getGeneration","getGenerations","downloadGeneration","responseType","clarifierService","clarifyRequirement","requirementText","setTimeout","userInputLower","toLowerCase","topLevelExpectation","name","description","acceptance_criteria","constraints","Math","random","toString","substring","level","source_text","subExpectations","includes","parent_id","top_level_expectation","sub_expectations","process_metadata","timestamp","Date","toISOString","version","getClarificationHistory"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/services/api.js"],"sourcesContent":["/**\n * @file api.js\n * @description API服务，处理HTTP请求\n * \n * 需求:\n * 1. 更新现有API服务，支持新的会话和生成功能\n * 2. 保留认证相关功能\n * 3. 增加会话管理和消息发送API\n * 4. 支持代码生成和存储相关API\n * 5. 添加澄清器服务，处理需求澄清和期望生成\n * \n * 主要服务:\n * - authService: 认证相关API\n * - conversationService: 会话管理API\n * - expectationService: 期望管理API\n * - generationService: 代码生成API\n * - clarifierService: 需求澄清API\n */\n\nimport axios from 'axios';\n// 导入其他必要依赖\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器 - 添加认证信息\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // 处理401未授权错误\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem('authToken');\n      // 如果有路由，可以重定向到登录页\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 处理用户认证相关的API\nexport const authService = {\n  // 用户登录\n  login: (credentials) => {\n    return api.post('/api/auth/login', credentials);\n  },\n  \n  // 用户注册\n  register: (userData) => {\n    return api.post('/api/auth/register', userData);\n  },\n  \n  // 获取当前用户信息\n  getCurrentUser: () => {\n    return api.get('/api/auth/me');\n  },\n  \n  // 退出登录\n  logout: () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('mockUser');\n    return Promise.resolve();\n  },\n};\n\n// 处理会话相关的API\nexport const conversationService = {\n  // 创建新会话\n  createConversation: () => {\n    return api.post('/api/conversations');\n  },\n  \n  // 获取会话\n  getConversation: (id) => {\n    return api.get(`/api/conversations/${id}`);\n  },\n  \n  // 发送消息\n  sendMessage: (conversationId, content) => {\n    return api.post(`/api/conversations/${conversationId}/messages`, { content });\n  },\n  \n  // 确认期望\n  confirmExpectation: (conversationId, expectationId) => {\n    return api.post(`/api/conversations/${conversationId}/confirm`, { expectationId });\n  },\n  \n  // 生成代码\n  generateCode: (conversationId, expectationId) => {\n    return api.post(`/api/conversations/${conversationId}/generate`, { expectationId });\n  },\n  \n  // 获取会话列表\n  getConversations: () => {\n    return api.get('/api/conversations');\n  },\n};\n\n// 处理期望相关的API\nexport const expectationService = {\n  // 获取所有期望\n  getExpectations: () => {\n    return api.get('/api/expectations');\n  },\n  \n  // 获取单个期望详情\n  getExpectation: (id) => {\n    return api.get(`/api/expectations/${id}`);\n  },\n  \n  // 创建新期望\n  createExpectation: (data) => {\n    return api.post('/api/expectations', data);\n  },\n  \n  // 更新期望\n  updateExpectation: (id, data) => {\n    return api.put(`/api/expectations/${id}`, data);\n  },\n  \n  // 删除期望\n  deleteExpectation: (id) => {\n    return api.delete(`/api/expectations/${id}`);\n  },\n};\n\n// 处理代码生成相关的API\nexport const generationService = {\n  // 获取生成结果\n  getGeneration: (id) => {\n    return api.get(`/api/generations/${id}`);\n  },\n  \n  // 获取生成历史\n  getGenerations: () => {\n    return api.get('/api/generations');\n  },\n  \n  // 下载生成的代码\n  downloadGeneration: (id) => {\n    return api.get(`/api/generations/${id}/download`, {\n      responseType: 'blob'\n    });\n  },\n};\n\nexport const clarifierService = {\n  clarifyRequirement: (requirementText) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const userInputLower = requirementText.toLowerCase();\n        \n        let topLevelExpectation = {\n          name: \"Software Project\",\n          description: \"A software solution based on the provided requirements.\",\n          acceptance_criteria: [\n            \"Must solve the core problem described\",\n            \"Should be user-friendly and intuitive\"\n          ],\n          constraints: [\n            \"Must be completed within reasonable timeframe\",\n            \"Should follow industry best practices\"\n          ],\n          id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n          level: \"top\",\n          source_text: requirementText\n        };\n        \n        let subExpectations = [];\n        \n        if (userInputLower.includes('website') || userInputLower.includes('web app') || userInputLower.includes('homepage')) {\n          topLevelExpectation = {\n            name: \"Website Development\",\n            description: \"A responsive website that serves the specific needs and target audience.\",\n            acceptance_criteria: [\n              \"Responsive design that works on mobile and desktop\",\n              \"Clear navigation and user interface\",\n              \"Content management capabilities\"\n            ],\n            constraints: [\n              \"Must follow web accessibility guidelines\",\n              \"Should load quickly on various devices and connections\"\n            ],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          \n          subExpectations = [\n            {\n              name: \"Frontend UI Components\",\n              description: \"User interface components for the website.\",\n              acceptance_criteria: [\n                \"Responsive layout that adapts to different screen sizes\",\n                \"Consistent design language across all pages\",\n                \"Interactive elements with appropriate feedback\"\n              ],\n              constraints: [\n                \"Must be accessible according to WCAG standards\",\n                \"Should be cross-browser compatible\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"Content Management\",\n              description: \"System for managing website content.\",\n              acceptance_criteria: [\n                \"Ability to add, edit, and delete content\",\n                \"Support for different content types (text, images, etc.)\",\n                \"Preview functionality before publishing\"\n              ],\n              constraints: [\n                \"Must be user-friendly for non-technical users\",\n                \"Should support content versioning\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"Performance Optimization\",\n              description: \"Optimizations to ensure fast loading and smooth operation.\",\n              acceptance_criteria: [\n                \"Page load time under 3 seconds on average connections\",\n                \"Optimized assets (images, scripts, styles)\",\n                \"Caching strategy for improved performance\"\n              ],\n              constraints: [\n                \"Must maintain visual quality while optimizing\",\n                \"Should not sacrifice functionality for speed\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            }\n          ];\n        } else if (userInputLower.includes('app') || userInputLower.includes('mobile')) {\n          topLevelExpectation = {\n            name: \"Mobile Application\",\n            description: \"A mobile app that delivers value to users on iOS and/or Android platforms.\",\n            acceptance_criteria: [\n              \"Intuitive user interface\",\n              \"Core functionality works offline\",\n              \"Efficient performance on target devices\"\n            ],\n            constraints: [\n              \"Must comply with app store guidelines\",\n              \"Should minimize battery usage\"\n            ],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          \n          subExpectations = [\n            {\n              name: \"User Interface Design\",\n              description: \"Design of the app's user interface and experience.\",\n              acceptance_criteria: [\n                \"Follows platform design guidelines (Material Design/Human Interface)\",\n                \"Consistent visual language throughout the app\",\n                \"Intuitive navigation and interaction patterns\"\n              ],\n              constraints: [\n                \"Must be accessible to users with disabilities\",\n                \"Should support different device sizes and orientations\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"Offline Functionality\",\n              description: \"Features that work without an internet connection.\",\n              acceptance_criteria: [\n                \"Core features available offline\",\n                \"Data synchronization when connection is restored\",\n                \"Clear indication of online/offline status\"\n              ],\n              constraints: [\n                \"Must handle conflict resolution during sync\",\n                \"Should minimize storage usage\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"Performance Optimization\",\n              description: \"Optimizations for smooth operation and battery efficiency.\",\n              acceptance_criteria: [\n                \"App launches within 3 seconds\",\n                \"Smooth scrolling and transitions (60fps)\",\n                \"Minimal battery impact during normal usage\"\n              ],\n              constraints: [\n                \"Must work on devices up to 3 years old\",\n                \"Should not exceed reasonable memory usage\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            }\n          ];\n        } else if (userInputLower.includes('api') || userInputLower.includes('backend')) {\n          topLevelExpectation = {\n            name: \"API/Backend System\",\n            description: \"A robust backend system to support application needs with secure and efficient data processing.\",\n            acceptance_criteria: [\n              \"Secure authentication and authorization\",\n              \"Well-documented API endpoints\",\n              \"Efficient data processing\"\n            ],\n            constraints: [\n              \"Must handle expected load\",\n              \"Should implement proper error handling\"\n            ],\n            id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n            level: \"top\",\n            source_text: requirementText\n          };\n          \n          subExpectations = [\n            {\n              name: \"Authentication System\",\n              description: \"System for user authentication and authorization.\",\n              acceptance_criteria: [\n                \"Secure user registration and login\",\n                \"Role-based access control\",\n                \"Token-based authentication with refresh capability\"\n              ],\n              constraints: [\n                \"Must follow security best practices (OWASP)\",\n                \"Should support multiple authentication methods\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"API Design\",\n              description: \"Design and implementation of API endpoints.\",\n              acceptance_criteria: [\n                \"RESTful or GraphQL API following best practices\",\n                \"Consistent response format\",\n                \"Comprehensive error handling\"\n              ],\n              constraints: [\n                \"Must be versioned for future compatibility\",\n                \"Should be rate-limited to prevent abuse\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            },\n            {\n              name: \"Data Processing\",\n              description: \"Systems for processing and storing data.\",\n              acceptance_criteria: [\n                \"Efficient database queries and operations\",\n                \"Data validation and sanitization\",\n                \"Backup and recovery procedures\"\n              ],\n              constraints: [\n                \"Must ensure data integrity\",\n                \"Should optimize for query performance\"\n              ],\n              id: \"exp-\" + Math.random().toString(36).substring(2, 10),\n              level: \"sub\",\n              parent_id: topLevelExpectation.id\n            }\n          ];\n        }\n        \n        resolve({\n          data: {\n            top_level_expectation: topLevelExpectation,\n            sub_expectations: subExpectations,\n            process_metadata: {\n              timestamp: new Date().toISOString(),\n              version: \"1.0\"\n            }\n          }\n        });\n      }, 1000);\n    });\n  },\n  \n  getClarificationHistory: () => {\n    return api.get('/api/clarifier/history');\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}