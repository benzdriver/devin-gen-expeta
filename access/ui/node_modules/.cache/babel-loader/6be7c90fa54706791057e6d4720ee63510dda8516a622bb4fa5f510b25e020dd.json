{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/components/conversation/MessageInput.js\",\n  _s = $RefreshSig$();\n/**\n * @file MessageInput.js\n * @description 消息输入组件，用于用户输入和发送消息\n * \n * 需求:\n * 1. 提供消息输入框和发送按钮\n * 2. 支持Enter键发送和Shift+Enter换行\n * 3. 处理输入验证和长度限制\n * 4. 支持发送状态反馈\n * 5. 支持暂时禁用输入（等待系统响应时）\n * \n * 组件属性:\n * - onSend: 发送消息的回调函数\n * - disabled: 是否禁用输入\n * - placeholder: 输入框占位文本\n */\n\nimport React, { useState, useRef } from 'react';\nimport { Input, Button, HStack, Textarea, useToast, Box, FormControl, useColorModeValue } from '@chakra-ui/react';\nimport { ArrowUpIcon } from '@chakra-ui/icons';\n\n/**\n * 消息输入组件，用于用户输入和发送消息\n * @param {Object} props 组件属性\n * @param {Function} props.onSend 发送消息的回调函数\n * @param {boolean} props.disabled 是否禁用输入\n * @param {string} props.placeholder 输入框占位文本\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageInput = ({\n  onSend,\n  disabled = false,\n  placeholder = '输入您的需求或问题...',\n  maxLength = 1000\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const textareaRef = useRef(null);\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // 处理消息发送\n  const handleSend = async () => {\n    const trimmedMessage = message.trim();\n    if (!trimmedMessage) {\n      return;\n    }\n    if (trimmedMessage.length > maxLength) {\n      toast({\n        title: '消息过长',\n        description: `消息不能超过${maxLength}个字符`,\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    setIsSending(true);\n    try {\n      await onSend(trimmedMessage);\n      setMessage('');\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    } catch (error) {\n      toast({\n        title: '发送失败',\n        description: error.message || '无法发送消息，请稍后重试',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  // 处理键盘事件\n  const handleKeyPress = e => {\n    // Enter发送，Shift+Enter换行\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    borderTop: \"1px\",\n    borderColor: borderColor,\n    bg: bgColor,\n    position: \"sticky\",\n    bottom: \"0\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Textarea, {\n          ref: textareaRef,\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: placeholder,\n          size: \"md\",\n          resize: \"none\",\n          rows: 2,\n          disabled: disabled || isSending,\n          maxLength: maxLength,\n          bg: bgColor,\n          borderRadius: \"md\",\n          flex: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          onClick: handleSend,\n          isLoading: isSending,\n          isDisabled: disabled || !message.trim(),\n          borderRadius: \"md\",\n          h: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageInput, \"Dt8AxoQV6CEF9fwb5yazPPF+3Es=\", false, function () {\n  return [useToast, useColorModeValue, useColorModeValue];\n});\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useState","useRef","Input","Button","HStack","Textarea","useToast","Box","FormControl","useColorModeValue","ArrowUpIcon","jsxDEV","_jsxDEV","MessageInput","onSend","disabled","placeholder","maxLength","_s","message","setMessage","isSending","setIsSending","textareaRef","toast","bgColor","borderColor","handleSend","trimmedMessage","trim","length","title","description","status","duration","isClosable","current","focus","error","handleKeyPress","e","key","shiftKey","preventDefault","p","borderTop","bg","position","bottom","width","children","ref","value","onChange","target","onKeyPress","size","resize","rows","borderRadius","flex","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","onClick","isLoading","isDisabled","h","_c","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/components/conversation/MessageInput.js"],"sourcesContent":["/**\n * @file MessageInput.js\n * @description 消息输入组件，用于用户输入和发送消息\n * \n * 需求:\n * 1. 提供消息输入框和发送按钮\n * 2. 支持Enter键发送和Shift+Enter换行\n * 3. 处理输入验证和长度限制\n * 4. 支持发送状态反馈\n * 5. 支持暂时禁用输入（等待系统响应时）\n * \n * 组件属性:\n * - onSend: 发送消息的回调函数\n * - disabled: 是否禁用输入\n * - placeholder: 输入框占位文本\n */\n\nimport React, { useState, useRef } from 'react';\nimport { \n  Input, \n  Button, \n  HStack, \n  Textarea, \n  useToast,\n  Box,\n  FormControl,\n  useColorModeValue\n} from '@chakra-ui/react';\nimport { ArrowUpIcon } from '@chakra-ui/icons';\n\n/**\n * 消息输入组件，用于用户输入和发送消息\n * @param {Object} props 组件属性\n * @param {Function} props.onSend 发送消息的回调函数\n * @param {boolean} props.disabled 是否禁用输入\n * @param {string} props.placeholder 输入框占位文本\n */\nconst MessageInput = ({ \n  onSend, \n  disabled = false, \n  placeholder = '输入您的需求或问题...',\n  maxLength = 1000 \n}) => {\n  const [message, setMessage] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const textareaRef = useRef(null);\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // 处理消息发送\n  const handleSend = async () => {\n    const trimmedMessage = message.trim();\n    \n    if (!trimmedMessage) {\n      return;\n    }\n    \n    if (trimmedMessage.length > maxLength) {\n      toast({\n        title: '消息过长',\n        description: `消息不能超过${maxLength}个字符`,\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n    \n    setIsSending(true);\n    \n    try {\n      await onSend(trimmedMessage);\n      setMessage('');\n      if (textareaRef.current) {\n        textareaRef.current.focus();\n      }\n    } catch (error) {\n      toast({\n        title: '发送失败',\n        description: error.message || '无法发送消息，请稍后重试',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  // 处理键盘事件\n  const handleKeyPress = (e) => {\n    // Enter发送，Shift+Enter换行\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  return (\n    <Box \n      p={3} \n      borderTop=\"1px\" \n      borderColor={borderColor}\n      bg={bgColor}\n      position=\"sticky\"\n      bottom=\"0\"\n      width=\"100%\"\n    >\n      <FormControl>\n        <HStack>\n          <Textarea\n            ref={textareaRef}\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder={placeholder}\n            size=\"md\"\n            resize=\"none\"\n            rows={2}\n            disabled={disabled || isSending}\n            maxLength={maxLength}\n            bg={bgColor}\n            borderRadius=\"md\"\n            flex=\"1\"\n          />\n          <Button\n            colorScheme=\"blue\"\n            onClick={handleSend}\n            isLoading={isSending}\n            isDisabled={disabled || !message.trim()}\n            borderRadius=\"md\"\n            h=\"100%\"\n          >\n            <ArrowUpIcon />\n          </Button>\n        </HStack>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default MessageInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}