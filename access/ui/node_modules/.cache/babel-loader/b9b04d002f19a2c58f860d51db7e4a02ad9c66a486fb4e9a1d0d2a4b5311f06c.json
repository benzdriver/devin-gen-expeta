{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/components/conversation/MessageList.js\",\n  _s = $RefreshSig$();\n/**\n * @file MessageList.js\n * @description 消息列表组件，展示对话中的消息历史\n * \n * 需求:\n * 1. 展示消息列表，区分用户消息和系统消息\n * 2. 支持自动滚动到最新消息\n * 3. 支持消息分组和时间戳\n * 4. 处理不同类型消息的展示样式\n * 5. 支持长消息的折叠与展开\n * \n * 组件属性:\n * - messages: 消息对象数组\n * - loading: 是否正在加载更多消息\n */\n\nimport React, { useEffect, useRef } from 'react';\nimport { VStack, Box, Text, Badge, Avatar, Flex, Divider, useColorModeValue } from '@chakra-ui/react';\n\n/**\n * 消息列表组件，展示对话中的消息历史\n * @param {Object} props 组件属性\n * @param {Array} props.messages 消息对象数组\n * @param {boolean} props.loading 是否正在加载更多消息\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = ({\n  messages = [],\n  loading = false\n}) => {\n  _s();\n  const bottomRef = useRef(null);\n  const bgUser = useColorModeValue('blue.50', 'blue.900');\n  const bgSystem = useColorModeValue('gray.100', 'gray.700');\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // 根据发送时间对消息进行分组\n  const groupMessagesByDate = () => {\n    const groups = [];\n    let currentDate = null;\n    let currentGroup = [];\n    messages.forEach(message => {\n      const messageDate = new Date(message.timestamp).toLocaleDateString();\n      if (messageDate !== currentDate) {\n        if (currentGroup.length > 0) {\n          groups.push({\n            date: currentDate,\n            messages: currentGroup\n          });\n        }\n        currentDate = messageDate;\n        currentGroup = [message];\n      } else {\n        currentGroup.push(message);\n      }\n    });\n    if (currentGroup.length > 0) {\n      groups.push({\n        date: currentDate,\n        messages: currentGroup\n      });\n    }\n    return groups;\n  };\n  const messageGroups = groupMessagesByDate();\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: 4,\n    align: \"stretch\",\n    w: \"100%\",\n    maxH: \"70vh\",\n    overflowY: \"auto\",\n    p: 2,\n    children: [loading && /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      py: 2,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"sm\",\n        color: \"gray.500\",\n        children: \"\\u52A0\\u8F7D\\u6D88\\u606F\\u5386\\u53F2...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), messageGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justify: \"center\",\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          borderRadius: \"full\",\n          px: 2,\n          py: 1,\n          colorScheme: \"gray\",\n          children: group.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), group.messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n        bg: message.sender === 'user' ? bgUser : bgSystem,\n        p: 3,\n        borderRadius: \"lg\",\n        maxW: \"80%\",\n        alignSelf: message.sender === 'user' ? 'flex-end' : 'flex-start',\n        mb: 3,\n        ml: message.sender === 'user' ? 'auto' : 0,\n        mr: message.sender === 'user' ? 0 : 'auto',\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [message.sender !== 'user' && /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"sm\",\n            name: \"Expeta AI\",\n            src: \"/logo.png\",\n            mr: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              justify: \"space-between\",\n              alignItems: \"center\",\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"bold\",\n                fontSize: \"sm\",\n                children: message.sender === 'user' ? '您' : 'Expeta AI'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                color: \"gray.500\",\n                ml: 2,\n                children: new Date(message.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"sm\",\n            name: \"User\",\n            ml: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, message.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this))]\n    }, groupIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: bottomRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageList, \"eughcKFtg3fuDjdj3c74LMdmb4A=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useRef","VStack","Box","Text","Badge","Avatar","Flex","Divider","useColorModeValue","jsxDEV","_jsxDEV","MessageList","messages","loading","_s","bottomRef","bgUser","bgSystem","current","scrollIntoView","behavior","groupMessagesByDate","groups","currentDate","currentGroup","forEach","message","messageDate","Date","timestamp","toLocaleDateString","length","push","date","messageGroups","spacing","align","w","maxH","overflowY","p","children","textAlign","py","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","map","group","groupIndex","justify","mb","borderRadius","px","colorScheme","index","bg","sender","maxW","alignSelf","ml","mr","size","name","src","alignItems","fontWeight","toLocaleTimeString","content","id","ref","_c","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/components/conversation/MessageList.js"],"sourcesContent":["/**\n * @file MessageList.js\n * @description 消息列表组件，展示对话中的消息历史\n * \n * 需求:\n * 1. 展示消息列表，区分用户消息和系统消息\n * 2. 支持自动滚动到最新消息\n * 3. 支持消息分组和时间戳\n * 4. 处理不同类型消息的展示样式\n * 5. 支持长消息的折叠与展开\n * \n * 组件属性:\n * - messages: 消息对象数组\n * - loading: 是否正在加载更多消息\n */\n\nimport React, { useEffect, useRef } from 'react';\nimport { \n  VStack, \n  Box, \n  Text, \n  Badge, \n  Avatar, \n  Flex, \n  Divider,\n  useColorModeValue\n} from '@chakra-ui/react';\n\n/**\n * 消息列表组件，展示对话中的消息历史\n * @param {Object} props 组件属性\n * @param {Array} props.messages 消息对象数组\n * @param {boolean} props.loading 是否正在加载更多消息\n */\nconst MessageList = ({ messages = [], loading = false }) => {\n  const bottomRef = useRef(null);\n  const bgUser = useColorModeValue('blue.50', 'blue.900');\n  const bgSystem = useColorModeValue('gray.100', 'gray.700');\n\n  // 自动滚动到最新消息\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // 根据发送时间对消息进行分组\n  const groupMessagesByDate = () => {\n    const groups = [];\n    let currentDate = null;\n    let currentGroup = [];\n\n    messages.forEach(message => {\n      const messageDate = new Date(message.timestamp).toLocaleDateString();\n      \n      if (messageDate !== currentDate) {\n        if (currentGroup.length > 0) {\n          groups.push({\n            date: currentDate,\n            messages: currentGroup\n          });\n        }\n        currentDate = messageDate;\n        currentGroup = [message];\n      } else {\n        currentGroup.push(message);\n      }\n    });\n\n    if (currentGroup.length > 0) {\n      groups.push({\n        date: currentDate,\n        messages: currentGroup\n      });\n    }\n\n    return groups;\n  };\n\n  const messageGroups = groupMessagesByDate();\n\n  return (\n    <VStack spacing={4} align=\"stretch\" w=\"100%\" maxH=\"70vh\" overflowY=\"auto\" p={2}>\n      {loading && (\n        <Box textAlign=\"center\" py={2}>\n          <Text fontSize=\"sm\" color=\"gray.500\">加载消息历史...</Text>\n        </Box>\n      )}\n\n      {messageGroups.map((group, groupIndex) => (\n        <Box key={groupIndex}>\n          <Flex justify=\"center\" mb={2}>\n            <Badge borderRadius=\"full\" px={2} py={1} colorScheme=\"gray\">\n              {group.date}\n            </Badge>\n          </Flex>\n\n          {group.messages.map((message, index) => (\n            <Box \n              key={message.id || index}\n              bg={message.sender === 'user' ? bgUser : bgSystem}\n              p={3}\n              borderRadius=\"lg\"\n              maxW=\"80%\"\n              alignSelf={message.sender === 'user' ? 'flex-end' : 'flex-start'}\n              mb={3}\n              ml={message.sender === 'user' ? 'auto' : 0}\n              mr={message.sender === 'user' ? 0 : 'auto'}\n            >\n              <Flex>\n                {message.sender !== 'user' && (\n                  <Avatar \n                    size=\"sm\" \n                    name=\"Expeta AI\" \n                    src=\"/logo.png\" \n                    mr={2}\n                  />\n                )}\n                <Box>\n                  <Flex justify=\"space-between\" alignItems=\"center\" mb={1}>\n                    <Text fontWeight=\"bold\" fontSize=\"sm\">\n                      {message.sender === 'user' ? '您' : 'Expeta AI'}\n                    </Text>\n                    <Text fontSize=\"xs\" color=\"gray.500\" ml={2}>\n                      {new Date(message.timestamp).toLocaleTimeString()}\n                    </Text>\n                  </Flex>\n                  <Text>{message.content}</Text>\n                </Box>\n                {message.sender === 'user' && (\n                  <Avatar \n                    size=\"sm\" \n                    name=\"User\" \n                    ml={2}\n                  />\n                )}\n              </Flex>\n            </Box>\n          ))}\n        </Box>\n      ))}\n\n      <div ref={bottomRef} />\n    </VStack>\n  );\n};\n\nexport default MessageList;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SACEC,MAAM,EACNC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,IAAI,EACJC,OAAO,EACPC,iBAAiB,QACZ,kBAAkB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ,GAAG,EAAE;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,MAAM,GAAGR,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAC;EACvD,MAAMS,QAAQ,GAAGT,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC;;EAE1D;EACAT,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,CAACG,OAAO,EAAE;MACrBH,SAAS,CAACG,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,MAAM,GAAG,EAAE;IACjB,IAAIC,WAAW,GAAG,IAAI;IACtB,IAAIC,YAAY,GAAG,EAAE;IAErBZ,QAAQ,CAACa,OAAO,CAACC,OAAO,IAAI;MAC1B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACG,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAEpE,IAAIH,WAAW,KAAKJ,WAAW,EAAE;QAC/B,IAAIC,YAAY,CAACO,MAAM,GAAG,CAAC,EAAE;UAC3BT,MAAM,CAACU,IAAI,CAAC;YACVC,IAAI,EAAEV,WAAW;YACjBX,QAAQ,EAAEY;UACZ,CAAC,CAAC;QACJ;QACAD,WAAW,GAAGI,WAAW;QACzBH,YAAY,GAAG,CAACE,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLF,YAAY,CAACQ,IAAI,CAACN,OAAO,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,IAAIF,YAAY,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3BT,MAAM,CAACU,IAAI,CAAC;QACVC,IAAI,EAAEV,WAAW;QACjBX,QAAQ,EAAEY;MACZ,CAAC,CAAC;IACJ;IAEA,OAAOF,MAAM;EACf,CAAC;EAED,MAAMY,aAAa,GAAGb,mBAAmB,CAAC,CAAC;EAE3C,oBACEX,OAAA,CAACT,MAAM;IAACkC,OAAO,EAAE,CAAE;IAACC,KAAK,EAAC,SAAS;IAACC,CAAC,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACC,SAAS,EAAC,MAAM;IAACC,CAAC,EAAE,CAAE;IAAAC,QAAA,GAC5E5B,OAAO,iBACNH,OAAA,CAACR,GAAG;MAACwC,SAAS,EAAC,QAAQ;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,eAC5B/B,OAAA,CAACP,IAAI;QAACyC,QAAQ,EAAC,IAAI;QAACC,KAAK,EAAC,UAAU;QAAAJ,QAAA,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN,EAEAf,aAAa,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,UAAU,kBACnC1C,OAAA,CAACR,GAAG;MAAAuC,QAAA,gBACF/B,OAAA,CAACJ,IAAI;QAAC+C,OAAO,EAAC,QAAQ;QAACC,EAAE,EAAE,CAAE;QAAAb,QAAA,eAC3B/B,OAAA,CAACN,KAAK;UAACmD,YAAY,EAAC,MAAM;UAACC,EAAE,EAAE,CAAE;UAACb,EAAE,EAAE,CAAE;UAACc,WAAW,EAAC,MAAM;UAAAhB,QAAA,EACxDU,KAAK,CAAClB;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EAENE,KAAK,CAACvC,QAAQ,CAACsC,GAAG,CAAC,CAACxB,OAAO,EAAEgC,KAAK,kBACjChD,OAAA,CAACR,GAAG;QAEFyD,EAAE,EAAEjC,OAAO,CAACkC,MAAM,KAAK,MAAM,GAAG5C,MAAM,GAAGC,QAAS;QAClDuB,CAAC,EAAE,CAAE;QACLe,YAAY,EAAC,IAAI;QACjBM,IAAI,EAAC,KAAK;QACVC,SAAS,EAAEpC,OAAO,CAACkC,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAa;QACjEN,EAAE,EAAE,CAAE;QACNS,EAAE,EAAErC,OAAO,CAACkC,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,CAAE;QAC3CI,EAAE,EAAEtC,OAAO,CAACkC,MAAM,KAAK,MAAM,GAAG,CAAC,GAAG,MAAO;QAAAnB,QAAA,eAE3C/B,OAAA,CAACJ,IAAI;UAAAmC,QAAA,GACFf,OAAO,CAACkC,MAAM,KAAK,MAAM,iBACxBlD,OAAA,CAACL,MAAM;YACL4D,IAAI,EAAC,IAAI;YACTC,IAAI,EAAC,WAAW;YAChBC,GAAG,EAAC,WAAW;YACfH,EAAE,EAAE;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CACF,eACDvC,OAAA,CAACR,GAAG;YAAAuC,QAAA,gBACF/B,OAAA,CAACJ,IAAI;cAAC+C,OAAO,EAAC,eAAe;cAACe,UAAU,EAAC,QAAQ;cAACd,EAAE,EAAE,CAAE;cAAAb,QAAA,gBACtD/B,OAAA,CAACP,IAAI;gBAACkE,UAAU,EAAC,MAAM;gBAACzB,QAAQ,EAAC,IAAI;gBAAAH,QAAA,EAClCf,OAAO,CAACkC,MAAM,KAAK,MAAM,GAAG,GAAG,GAAG;cAAW;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eACPvC,OAAA,CAACP,IAAI;gBAACyC,QAAQ,EAAC,IAAI;gBAACC,KAAK,EAAC,UAAU;gBAACkB,EAAE,EAAE,CAAE;gBAAAtB,QAAA,EACxC,IAAIb,IAAI,CAACF,OAAO,CAACG,SAAS,CAAC,CAACyC,kBAAkB,CAAC;cAAC;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACPvC,OAAA,CAACP,IAAI;cAAAsC,QAAA,EAAEf,OAAO,CAAC6C;YAAO;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,EACLvB,OAAO,CAACkC,MAAM,KAAK,MAAM,iBACxBlD,OAAA,CAACL,MAAM;YACL4D,IAAI,EAAC,IAAI;YACTC,IAAI,EAAC,MAAM;YACXH,EAAE,EAAE;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CACF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC,GArCFvB,OAAO,CAAC8C,EAAE,IAAId,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsCrB,CACN,CAAC;IAAA,GAhDMG,UAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiDf,CACN,CAAC,eAEFvC,OAAA;MAAK+D,GAAG,EAAE1D;IAAU;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEb,CAAC;AAACnC,EAAA,CA/GIH,WAAW;EAAA,QAEAH,iBAAiB,EACfA,iBAAiB;AAAA;AAAAkE,EAAA,GAH9B/D,WAAW;AAiHjB,eAAeA,WAAW;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}