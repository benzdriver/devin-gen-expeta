{"ast":null,"code":"var _jsxFileName = \"/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/pages/CodeGeneration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nfunction CodeGeneration({\n  sessionId\n}) {\n  _s();\n  const [expectation, setExpectation] = useState({\n    id: 'user_management_system',\n    title: '用户管理系统',\n    description: '一个完整的用户管理系统，提供用户账户生命周期管理和安全访问控制',\n    status: 'active',\n    subExpectations: [{\n      id: 'user_registration',\n      description: '允许新用户注册账户，收集必要信息并创建用户档案'\n    }, {\n      id: 'user_authentication',\n      description: '验证用户身份，允许合法用户登录系统'\n    }, {\n      id: 'profile_management',\n      description: '允许用户查看和更新个人资料信息'\n    }, {\n      id: 'role_based_access',\n      description: '实现基于角色的访问控制'\n    }]\n  });\n  const [generatedCode, setGeneratedCode] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [genOptions, setGenOptions] = useState({\n    language: 'python',\n    framework: 'flask',\n    includeTests: true,\n    includeDocumentation: true\n  });\n  const handleGenerateCode = async () => {\n    if (!sessionId || !expectation) return;\n    setIsGenerating(true);\n    try {\n      // 实际实现中，这里会调用后端 API\n      /*\n      const response = await fetch(`${API_BASE_URL}/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-ID': sessionId\n        },\n        body: JSON.stringify({\n          expectation_id: expectation.id,\n          options: genOptions\n        })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setGeneratedCode(data);\n      }\n      */\n\n      // 模拟生成代码\n      setTimeout(() => {\n        const mockGeneratedCode = {\n          language: 'python',\n          files: [{\n            name: 'app.py',\n            content: `from flask import Flask, request, jsonify\nfrom flask_cors import CORS\nfrom flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity\nimport bcrypt\nfrom models import db, User, Role, UserProfile\nimport os\n\napp = Flask(__name__)\nCORS(app)\n\n# 配置\napp.config['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'dev-secret-key')\napp.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL', 'sqlite:///users.db')\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\napp.config['JWT_SECRET_KEY'] = os.environ.get('JWT_SECRET_KEY', 'jwt-secret-key')\n\n# 初始化扩展\ndb.init_app(app)\njwt = JWTManager(app)\n\n@app.before_first_request\ndef create_tables():\n    db.create_all()\n    # 创建默认角色\n    if not Role.query.first():\n        roles = [\n            Role(name='admin', description='Administrator'),\n            Role(name='user', description='Regular user'),\n            Role(name='guest', description='Guest user')\n        ]\n        db.session.add_all(roles)\n        db.session.commit()\n\n@app.route('/api/register', methods=['POST'])\ndef register():\n    data = request.get_json()\n    \n    # 验证请求数据\n    if not data or not data.get('email') or not data.get('password'):\n        return jsonify({'message': 'Missing email or password'}), 400\n    \n    # 检查用户是否已存在\n    if User.query.filter_by(email=data['email']).first():\n        return jsonify({'message': 'User already exists'}), 409\n    \n    # 哈希密码\n    hashed_password = bcrypt.hashpw(data['password'].encode('utf-8'), bcrypt.gensalt())\n    \n    # 创建新用户\n    new_user = User(\n        email=data['email'],\n        password=hashed_password.decode('utf-8'),\n        username=data.get('username', data['email'].split('@')[0]),\n        role_id=Role.query.filter_by(name='user').first().id\n    )\n    \n    # 创建用户档案\n    profile = UserProfile(\n        first_name=data.get('first_name', ''),\n        last_name=data.get('last_name', ''),\n        phone=data.get('phone', '')\n    )\n    \n    new_user.profile = profile\n    \n    db.session.add(new_user)\n    db.session.commit()\n    \n    return jsonify({\n        'message': 'User registered successfully',\n        'user': {\n            'id': new_user.id,\n            'email': new_user.email,\n            'username': new_user.username\n        }\n    }), 201\n\n@app.route('/api/login', methods=['POST'])\ndef login():\n    data = request.get_json()\n    \n    # 验证请求数据\n    if not data or not data.get('email') or not data.get('password'):\n        return jsonify({'message': 'Missing email or password'}), 400\n    \n    # 查找用户\n    user = User.query.filter_by(email=data['email']).first()\n    \n    # 验证用户和密码\n    if not user or not bcrypt.checkpw(data['password'].encode('utf-8'), user.password.encode('utf-8')):\n        return jsonify({'message': 'Invalid credentials'}), 401\n    \n    # 创建访问令牌\n    access_token = create_access_token(identity=user.id)\n    \n    # 记录登录活动\n    user.record_login()\n    db.session.commit()\n    \n    return jsonify({\n        'message': 'Login successful',\n        'access_token': access_token,\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'role': user.role.name\n        }\n    }), 200\n\n@app.route('/api/profile', methods=['GET'])\n@jwt_required()\ndef get_profile():\n    user_id = get_jwt_identity()\n    user = User.query.get(user_id)\n    \n    if not user:\n        return jsonify({'message': 'User not found'}), 404\n    \n    return jsonify({\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'role': user.role.name,\n            'profile': {\n                'first_name': user.profile.first_name,\n                'last_name': user.profile.last_name,\n                'phone': user.profile.phone,\n                'created_at': user.profile.created_at.isoformat()\n            }\n        }\n    }), 200\n\n@app.route('/api/profile', methods=['PUT'])\n@jwt_required()\ndef update_profile():\n    user_id = get_jwt_identity()\n    user = User.query.get(user_id)\n    \n    if not user:\n        return jsonify({'message': 'User not found'}), 404\n    \n    data = request.get_json()\n    \n    # 更新用户名\n    if data.get('username'):\n        user.username = data['username']\n    \n    # 更新档案信息\n    if data.get('profile'):\n        profile_data = data['profile']\n        if profile_data.get('first_name'):\n            user.profile.first_name = profile_data['first_name']\n        if profile_data.get('last_name'):\n            user.profile.last_name = profile_data['last_name']\n        if profile_data.get('phone'):\n            user.profile.phone = profile_data['phone']\n    \n    db.session.commit()\n    \n    return jsonify({\n        'message': 'Profile updated successfully',\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'profile': {\n                'first_name': user.profile.first_name,\n                'last_name': user.profile.last_name,\n                'phone': user.profile.phone,\n                'updated_at': user.profile.updated_at.isoformat()\n            }\n        }\n    }), 200\n\nif __name__ == '__main__':\n    app.run(debug=True)\n`\n          }, {\n            name: 'models.py',\n            content: `from flask_sqlalchemy import SQLAlchemy\nfrom datetime import datetime\nimport enum\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(128), nullable=False)\n    active = db.Column(db.Boolean, default=True)\n    email_verified = db.Column(db.Boolean, default=False)\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    last_login = db.Column(db.DateTime, nullable=True)\n    login_attempts = db.Column(db.Integer, default=0)\n    \n    # 关联\n    role_id = db.Column(db.Integer, db.ForeignKey('roles.id'))\n    role = db.relationship('Role', backref=db.backref('users', lazy=True))\n    profile = db.relationship('UserProfile', backref=db.backref('user', uselist=False), uselist=False)\n    \n    def __repr__(self):\n        return f'<User {self.username}>'\n    \n    def record_login(self):\n        self.last_login = datetime.utcnow()\n        self.login_attempts = 0\n    \n    def record_login_attempt(self):\n        self.login_attempts += 1\n\nclass Role(db.Model):\n    __tablename__ = 'roles'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(50), unique=True, nullable=False)\n    description = db.Column(db.String(255))\n    \n    def __repr__(self):\n        return f'<Role {self.name}>'\n\nclass UserProfile(db.Model):\n    __tablename__ = 'user_profiles'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    first_name = db.Column(db.String(50))\n    last_name = db.Column(db.String(50))\n    phone = db.Column(db.String(20))\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    \n    def __repr__(self):\n        return f'<UserProfile {self.first_name} {self.last_name}>'\n\nclass LoginActivity(db.Model):\n    __tablename__ = 'login_activities'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    timestamp = db.Column(db.DateTime, default=datetime.utcnow)\n    ip_address = db.Column(db.String(45))\n    user_agent = db.Column(db.String(255))\n    successful = db.Column(db.Boolean, default=True)\n    \n    user = db.relationship('User', backref=db.backref('login_activities', lazy=True))\n    \n    def __repr__(self):\n        return f'<LoginActivity {self.user_id} at {self.timestamp}>'\n\nclass ProfileChangeHistory(db.Model):\n    __tablename__ = 'profile_change_history'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    field_name = db.Column(db.String(50), nullable=False)\n    old_value = db.Column(db.String(255))\n    new_value = db.Column(db.String(255))\n    changed_at = db.Column(db.DateTime, default=datetime.utcnow)\n    \n    user = db.relationship('User', backref=db.backref('profile_changes', lazy=True))\n    \n    def __repr__(self):\n        return f'<ProfileChangeHistory {self.field_name} for user {self.user_id}>'\n`\n          }, {\n            name: 'requirements.txt',\n            content: `Flask==2.0.1\nFlask-Cors==3.0.10\nFlask-JWT-Extended==4.3.1\nFlask-SQLAlchemy==2.5.1\nbcrypt==3.2.0\npython-dotenv==0.19.1\n`\n          }, {\n            name: 'tests/test_auth.py',\n            content: `import unittest\nimport json\nfrom app import app, db\nfrom models import User, Role\n\nclass AuthTestCase(unittest.TestCase):\n    def setUp(self):\n        app.config['TESTING'] = True\n        app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///:memory:'\n        self.client = app.test_client()\n        \n        with app.app_context():\n            db.create_all()\n            \n            # 创建测试角色\n            role = Role(name='user', description='Regular user')\n            db.session.add(role)\n            db.session.commit()\n    \n    def tearDown(self):\n        with app.app_context():\n            db.session.remove()\n            db.drop_all()\n    \n    def test_register(self):\n        response = self.client.post(\n            '/api/register',\n            data=json.dumps({\n                'email': 'test@example.com',\n                'password': 'securepassword',\n                'username': 'testuser'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 201)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'User registered successfully')\n        self.assertEqual(data['user']['email'], 'test@example.com')\n        \n        # 验证用户已创建\n        with app.app_context():\n            user = User.query.filter_by(email='test@example.com').first()\n            self.assertIsNotNone(user)\n            self.assertEqual(user.username, 'testuser')\n    \n    def test_login(self):\n        # 先创建一个用户\n        response = self.client.post(\n            '/api/register',\n            data=json.dumps({\n                'email': 'login@example.com',\n                'password': 'securepassword'\n            }),\n            content_type='application/json'\n        )\n        \n        # 尝试登录\n        response = self.client.post(\n            '/api/login',\n            data=json.dumps({\n                'email': 'login@example.com',\n                'password': 'securepassword'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 200)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'Login successful')\n        self.assertIn('access_token', data)\n        \n    def test_invalid_login(self):\n        response = self.client.post(\n            '/api/login',\n            data=json.dumps({\n                'email': 'nonexistent@example.com',\n                'password': 'wrongpassword'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 401)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'Invalid credentials')\n\nif __name__ == '__main__':\n    unittest.main()\n`\n          }]\n        };\n        setGeneratedCode(mockGeneratedCode);\n        setIsGenerating(false);\n      }, 2000);\n    } catch (error) {\n      console.error('Error generating code:', error);\n      setIsGenerating(false);\n    }\n  };\n  const handleLoadExpectation = () => {\n    // 处理加载期望的逻辑\n    console.log('Load expectation');\n  };\n  const handleCopyCode = () => {\n    // 复制代码到剪贴板\n    navigator.clipboard.writeText(generatedCode.files[0].content).then(() => {\n      console.log('Code copied to clipboard');\n    }).catch(err => {\n      console.error('Failed to copy code:', err);\n    });\n  };\n  const handleDownloadFile = file => {\n    // 下载单个文件\n    const blob = new Blob([file.content], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadAll = () => {\n    // 在实际实现中，这里应该调用后端 API 下载 ZIP 文件\n    // 但在前端模拟中，我们可以使用 JSZip，这里只是一个示例\n    console.log('Download all files');\n    /*\n    // 使用 JSZip 实现\n    const zip = new JSZip();\n    generatedCode.files.forEach(file => {\n      zip.file(file.name, file.content);\n    });\n    \n    zip.generateAsync({ type: 'blob' }).then(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${expectation.id}_code.zip`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    });\n    */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-generation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u671F\\u671B\\u6A21\\u578B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondary-button\",\n            onClick: handleLoadExpectation,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-rounded\",\n              children: \"folder_open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u52A0\\u8F7D\\u671F\\u671B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expectation-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expectation-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"expectation-id\",\n            children: expectation.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `expectation-status ${expectation.status}`,\n            children: expectation.status === 'active' ? '活跃' : '草稿'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"expectation-title\",\n          children: expectation.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"expectation-description\",\n          children: expectation.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this), expectation.subExpectations.map((subExp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-expectation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 16\n          }, this), \" \", subExp.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u63CF\\u8FF0:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 16\n          }, this), \" \", subExp.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-rounded\",\n            children: \"settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u751F\\u6210\\u9009\\u9879\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button generate-button\",\n          onClick: handleGenerateCode,\n          disabled: isGenerating,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-rounded\",\n            children: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isGenerating ? '生成中...' : '生成代码'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u751F\\u6210\\u7684\\u4EE3\\u7801\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-actions\",\n          children: generatedCode && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"secondary-button\",\n              onClick: handleCopyCode,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-rounded\",\n                children: \"content_copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u590D\\u5236\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"secondary-button\",\n              onClick: handleDownloadAll,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"material-symbols-rounded\",\n                children: \"download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u4E0B\\u8F7D\\u5168\\u90E8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-editor\",\n        children: isGenerating ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6B63\\u5728\\u751F\\u6210\\u4EE3\\u7801\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this) : generatedCode ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\u751F\\u6210\\u4E86 \", generatedCode.files.length, \" \\u4E2A\\u6587\\u4EF6:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginLeft: '20px'\n              },\n              children: generatedCode.files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '10px'\n                  },\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDownloadFile(file),\n                  style: {\n                    background: '#f0f0f0',\n                    border: 'none',\n                    padding: '2px 5px',\n                    borderRadius: '3px',\n                    cursor: 'pointer'\n                  },\n                  children: \"\\u4E0B\\u8F7D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: generatedCode.files[0].content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"// \\u70B9\\u51FB\\\"\\u751F\\u6210\\u4EE3\\u7801\\\"\\u6309\\u94AE\\u751F\\u6210\\u4EE3\\u7801\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeGeneration, \"RPI87ZVyAMweUpIYKXYHpOq320U=\");\n_c = CodeGeneration;\nexport default CodeGeneration;\nvar _c;\n$RefreshReg$(_c, \"CodeGeneration\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","CodeGeneration","sessionId","_s","expectation","setExpectation","id","title","description","status","subExpectations","generatedCode","setGeneratedCode","isGenerating","setIsGenerating","genOptions","setGenOptions","language","framework","includeTests","includeDocumentation","handleGenerateCode","setTimeout","mockGeneratedCode","files","name","content","error","console","handleLoadExpectation","log","handleCopyCode","navigator","clipboard","writeText","then","catch","err","handleDownloadFile","file","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleDownloadAll","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","subExp","index","disabled","style","textAlign","padding","marginBottom","length","marginLeft","marginRight","background","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/ziyanzhou/Projects/devin-gen-expeta/access/ui/src/pages/CodeGeneration.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction CodeGeneration({ sessionId }) {\n  const [expectation, setExpectation] = useState({\n    id: 'user_management_system',\n    title: '用户管理系统',\n    description: '一个完整的用户管理系统，提供用户账户生命周期管理和安全访问控制',\n    status: 'active',\n    subExpectations: [\n      {\n        id: 'user_registration',\n        description: '允许新用户注册账户，收集必要信息并创建用户档案'\n      },\n      {\n        id: 'user_authentication',\n        description: '验证用户身份，允许合法用户登录系统'\n      },\n      {\n        id: 'profile_management',\n        description: '允许用户查看和更新个人资料信息'\n      },\n      {\n        id: 'role_based_access',\n        description: '实现基于角色的访问控制'\n      }\n    ]\n  });\n  \n  const [generatedCode, setGeneratedCode] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [genOptions, setGenOptions] = useState({\n    language: 'python',\n    framework: 'flask',\n    includeTests: true,\n    includeDocumentation: true\n  });\n  \n  const handleGenerateCode = async () => {\n    if (!sessionId || !expectation) return;\n    \n    setIsGenerating(true);\n    \n    try {\n      // 实际实现中，这里会调用后端 API\n      /*\n      const response = await fetch(`${API_BASE_URL}/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Session-ID': sessionId\n        },\n        body: JSON.stringify({\n          expectation_id: expectation.id,\n          options: genOptions\n        })\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setGeneratedCode(data);\n      }\n      */\n      \n      // 模拟生成代码\n      setTimeout(() => {\n        const mockGeneratedCode = {\n          language: 'python',\n          files: [\n            {\n              name: 'app.py',\n              content: `from flask import Flask, request, jsonify\nfrom flask_cors import CORS\nfrom flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity\nimport bcrypt\nfrom models import db, User, Role, UserProfile\nimport os\n\napp = Flask(__name__)\nCORS(app)\n\n# 配置\napp.config['SECRET_KEY'] = os.environ.get('SECRET_KEY', 'dev-secret-key')\napp.config['SQLALCHEMY_DATABASE_URI'] = os.environ.get('DATABASE_URL', 'sqlite:///users.db')\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\napp.config['JWT_SECRET_KEY'] = os.environ.get('JWT_SECRET_KEY', 'jwt-secret-key')\n\n# 初始化扩展\ndb.init_app(app)\njwt = JWTManager(app)\n\n@app.before_first_request\ndef create_tables():\n    db.create_all()\n    # 创建默认角色\n    if not Role.query.first():\n        roles = [\n            Role(name='admin', description='Administrator'),\n            Role(name='user', description='Regular user'),\n            Role(name='guest', description='Guest user')\n        ]\n        db.session.add_all(roles)\n        db.session.commit()\n\n@app.route('/api/register', methods=['POST'])\ndef register():\n    data = request.get_json()\n    \n    # 验证请求数据\n    if not data or not data.get('email') or not data.get('password'):\n        return jsonify({'message': 'Missing email or password'}), 400\n    \n    # 检查用户是否已存在\n    if User.query.filter_by(email=data['email']).first():\n        return jsonify({'message': 'User already exists'}), 409\n    \n    # 哈希密码\n    hashed_password = bcrypt.hashpw(data['password'].encode('utf-8'), bcrypt.gensalt())\n    \n    # 创建新用户\n    new_user = User(\n        email=data['email'],\n        password=hashed_password.decode('utf-8'),\n        username=data.get('username', data['email'].split('@')[0]),\n        role_id=Role.query.filter_by(name='user').first().id\n    )\n    \n    # 创建用户档案\n    profile = UserProfile(\n        first_name=data.get('first_name', ''),\n        last_name=data.get('last_name', ''),\n        phone=data.get('phone', '')\n    )\n    \n    new_user.profile = profile\n    \n    db.session.add(new_user)\n    db.session.commit()\n    \n    return jsonify({\n        'message': 'User registered successfully',\n        'user': {\n            'id': new_user.id,\n            'email': new_user.email,\n            'username': new_user.username\n        }\n    }), 201\n\n@app.route('/api/login', methods=['POST'])\ndef login():\n    data = request.get_json()\n    \n    # 验证请求数据\n    if not data or not data.get('email') or not data.get('password'):\n        return jsonify({'message': 'Missing email or password'}), 400\n    \n    # 查找用户\n    user = User.query.filter_by(email=data['email']).first()\n    \n    # 验证用户和密码\n    if not user or not bcrypt.checkpw(data['password'].encode('utf-8'), user.password.encode('utf-8')):\n        return jsonify({'message': 'Invalid credentials'}), 401\n    \n    # 创建访问令牌\n    access_token = create_access_token(identity=user.id)\n    \n    # 记录登录活动\n    user.record_login()\n    db.session.commit()\n    \n    return jsonify({\n        'message': 'Login successful',\n        'access_token': access_token,\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'role': user.role.name\n        }\n    }), 200\n\n@app.route('/api/profile', methods=['GET'])\n@jwt_required()\ndef get_profile():\n    user_id = get_jwt_identity()\n    user = User.query.get(user_id)\n    \n    if not user:\n        return jsonify({'message': 'User not found'}), 404\n    \n    return jsonify({\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'role': user.role.name,\n            'profile': {\n                'first_name': user.profile.first_name,\n                'last_name': user.profile.last_name,\n                'phone': user.profile.phone,\n                'created_at': user.profile.created_at.isoformat()\n            }\n        }\n    }), 200\n\n@app.route('/api/profile', methods=['PUT'])\n@jwt_required()\ndef update_profile():\n    user_id = get_jwt_identity()\n    user = User.query.get(user_id)\n    \n    if not user:\n        return jsonify({'message': 'User not found'}), 404\n    \n    data = request.get_json()\n    \n    # 更新用户名\n    if data.get('username'):\n        user.username = data['username']\n    \n    # 更新档案信息\n    if data.get('profile'):\n        profile_data = data['profile']\n        if profile_data.get('first_name'):\n            user.profile.first_name = profile_data['first_name']\n        if profile_data.get('last_name'):\n            user.profile.last_name = profile_data['last_name']\n        if profile_data.get('phone'):\n            user.profile.phone = profile_data['phone']\n    \n    db.session.commit()\n    \n    return jsonify({\n        'message': 'Profile updated successfully',\n        'user': {\n            'id': user.id,\n            'email': user.email,\n            'username': user.username,\n            'profile': {\n                'first_name': user.profile.first_name,\n                'last_name': user.profile.last_name,\n                'phone': user.profile.phone,\n                'updated_at': user.profile.updated_at.isoformat()\n            }\n        }\n    }), 200\n\nif __name__ == '__main__':\n    app.run(debug=True)\n`\n            },\n            {\n              name: 'models.py',\n              content: `from flask_sqlalchemy import SQLAlchemy\nfrom datetime import datetime\nimport enum\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(128), nullable=False)\n    active = db.Column(db.Boolean, default=True)\n    email_verified = db.Column(db.Boolean, default=False)\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    last_login = db.Column(db.DateTime, nullable=True)\n    login_attempts = db.Column(db.Integer, default=0)\n    \n    # 关联\n    role_id = db.Column(db.Integer, db.ForeignKey('roles.id'))\n    role = db.relationship('Role', backref=db.backref('users', lazy=True))\n    profile = db.relationship('UserProfile', backref=db.backref('user', uselist=False), uselist=False)\n    \n    def __repr__(self):\n        return f'<User {self.username}>'\n    \n    def record_login(self):\n        self.last_login = datetime.utcnow()\n        self.login_attempts = 0\n    \n    def record_login_attempt(self):\n        self.login_attempts += 1\n\nclass Role(db.Model):\n    __tablename__ = 'roles'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(50), unique=True, nullable=False)\n    description = db.Column(db.String(255))\n    \n    def __repr__(self):\n        return f'<Role {self.name}>'\n\nclass UserProfile(db.Model):\n    __tablename__ = 'user_profiles'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    first_name = db.Column(db.String(50))\n    last_name = db.Column(db.String(50))\n    phone = db.Column(db.String(20))\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)\n    \n    def __repr__(self):\n        return f'<UserProfile {self.first_name} {self.last_name}>'\n\nclass LoginActivity(db.Model):\n    __tablename__ = 'login_activities'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    timestamp = db.Column(db.DateTime, default=datetime.utcnow)\n    ip_address = db.Column(db.String(45))\n    user_agent = db.Column(db.String(255))\n    successful = db.Column(db.Boolean, default=True)\n    \n    user = db.relationship('User', backref=db.backref('login_activities', lazy=True))\n    \n    def __repr__(self):\n        return f'<LoginActivity {self.user_id} at {self.timestamp}>'\n\nclass ProfileChangeHistory(db.Model):\n    __tablename__ = 'profile_change_history'\n    \n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    field_name = db.Column(db.String(50), nullable=False)\n    old_value = db.Column(db.String(255))\n    new_value = db.Column(db.String(255))\n    changed_at = db.Column(db.DateTime, default=datetime.utcnow)\n    \n    user = db.relationship('User', backref=db.backref('profile_changes', lazy=True))\n    \n    def __repr__(self):\n        return f'<ProfileChangeHistory {self.field_name} for user {self.user_id}>'\n`\n            },\n            {\n              name: 'requirements.txt',\n              content: `Flask==2.0.1\nFlask-Cors==3.0.10\nFlask-JWT-Extended==4.3.1\nFlask-SQLAlchemy==2.5.1\nbcrypt==3.2.0\npython-dotenv==0.19.1\n`\n            },\n            {\n              name: 'tests/test_auth.py',\n              content: `import unittest\nimport json\nfrom app import app, db\nfrom models import User, Role\n\nclass AuthTestCase(unittest.TestCase):\n    def setUp(self):\n        app.config['TESTING'] = True\n        app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///:memory:'\n        self.client = app.test_client()\n        \n        with app.app_context():\n            db.create_all()\n            \n            # 创建测试角色\n            role = Role(name='user', description='Regular user')\n            db.session.add(role)\n            db.session.commit()\n    \n    def tearDown(self):\n        with app.app_context():\n            db.session.remove()\n            db.drop_all()\n    \n    def test_register(self):\n        response = self.client.post(\n            '/api/register',\n            data=json.dumps({\n                'email': 'test@example.com',\n                'password': 'securepassword',\n                'username': 'testuser'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 201)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'User registered successfully')\n        self.assertEqual(data['user']['email'], 'test@example.com')\n        \n        # 验证用户已创建\n        with app.app_context():\n            user = User.query.filter_by(email='test@example.com').first()\n            self.assertIsNotNone(user)\n            self.assertEqual(user.username, 'testuser')\n    \n    def test_login(self):\n        # 先创建一个用户\n        response = self.client.post(\n            '/api/register',\n            data=json.dumps({\n                'email': 'login@example.com',\n                'password': 'securepassword'\n            }),\n            content_type='application/json'\n        )\n        \n        # 尝试登录\n        response = self.client.post(\n            '/api/login',\n            data=json.dumps({\n                'email': 'login@example.com',\n                'password': 'securepassword'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 200)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'Login successful')\n        self.assertIn('access_token', data)\n        \n    def test_invalid_login(self):\n        response = self.client.post(\n            '/api/login',\n            data=json.dumps({\n                'email': 'nonexistent@example.com',\n                'password': 'wrongpassword'\n            }),\n            content_type='application/json'\n        )\n        \n        self.assertEqual(response.status_code, 401)\n        data = json.loads(response.data)\n        self.assertEqual(data['message'], 'Invalid credentials')\n\nif __name__ == '__main__':\n    unittest.main()\n`\n            }\n          ]\n        };\n        setGeneratedCode(mockGeneratedCode);\n        setIsGenerating(false);\n      }, 2000);\n    } catch (error) {\n      console.error('Error generating code:', error);\n      setIsGenerating(false);\n    }\n  };\n  \n  const handleLoadExpectation = () => {\n    // 处理加载期望的逻辑\n    console.log('Load expectation');\n  };\n  \n  const handleCopyCode = () => {\n    // 复制代码到剪贴板\n    navigator.clipboard.writeText(generatedCode.files[0].content)\n      .then(() => {\n        console.log('Code copied to clipboard');\n      })\n      .catch(err => {\n        console.error('Failed to copy code:', err);\n      });\n  };\n  \n  const handleDownloadFile = (file) => {\n    // 下载单个文件\n    const blob = new Blob([file.content], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  const handleDownloadAll = () => {\n    // 在实际实现中，这里应该调用后端 API 下载 ZIP 文件\n    // 但在前端模拟中，我们可以使用 JSZip，这里只是一个示例\n    console.log('Download all files');\n    /*\n    // 使用 JSZip 实现\n    const zip = new JSZip();\n    generatedCode.files.forEach(file => {\n      zip.file(file.name, file.content);\n    });\n    \n    zip.generateAsync({ type: 'blob' }).then(blob => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${expectation.id}_code.zip`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    });\n    */\n  };\n\n  return (\n    <div className=\"code-generation-container\">\n      <div className=\"code-input\">\n        <div className=\"section-header\">\n          <h3>期望模型</h3>\n          <div className=\"section-actions\">\n            <button className=\"secondary-button\" onClick={handleLoadExpectation}>\n              <span className=\"material-symbols-rounded\">folder_open</span>\n              <span>加载期望</span>\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"expectation-item\">\n          <div className=\"expectation-header\">\n            <span className=\"expectation-id\">{expectation.id}</span>\n            <span className={`expectation-status ${expectation.status}`}>\n              {expectation.status === 'active' ? '活跃' : '草稿'}\n            </span>\n          </div>\n          <h4 className=\"expectation-title\">{expectation.title}</h4>\n          <p className=\"expectation-description\">{expectation.description}</p>\n        </div>\n        \n        {expectation.subExpectations.map((subExp, index) => (\n          <div key={index} className=\"sub-expectation\">\n            <p><strong>ID:</strong> {subExp.id}</p>\n            <p><strong>描述:</strong> {subExp.description}</p>\n          </div>\n        ))}\n        \n        <div className=\"code-actions\">\n          <button className=\"secondary-button\">\n            <span className=\"material-symbols-rounded\">settings</span>\n            <span>生成选项</span>\n          </button>\n          <button \n            className=\"primary-button generate-button\"\n            onClick={handleGenerateCode}\n            disabled={isGenerating}\n          >\n            <span className=\"material-symbols-rounded\">code</span>\n            <span>{isGenerating ? '生成中...' : '生成代码'}</span>\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"code-output\">\n        <div className=\"section-header\">\n          <h3>生成的代码</h3>\n          <div className=\"section-actions\">\n            {generatedCode && (\n              <>\n                <button className=\"secondary-button\" onClick={handleCopyCode}>\n                  <span className=\"material-symbols-rounded\">content_copy</span>\n                  <span>复制</span>\n                </button>\n                <button className=\"secondary-button\" onClick={handleDownloadAll}>\n                  <span className=\"material-symbols-rounded\">download</span>\n                  <span>下载全部</span>\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"code-editor\">\n          {isGenerating ? (\n            <div style={{ textAlign: 'center', padding: '20px' }}>\n              <div>正在生成代码，请稍候...</div>\n            </div>\n          ) : generatedCode ? (\n            <div>\n              <div style={{ marginBottom: '10px' }}>\n                <h4>生成了 {generatedCode.files.length} 个文件:</h4>\n                <ul style={{ marginLeft: '20px' }}>\n                  {generatedCode.files.map((file, index) => (\n                    <li key={index} style={{ marginBottom: '5px' }}>\n                      <span style={{ marginRight: '10px' }}>{file.name}</span>\n                      <button \n                        onClick={() => handleDownloadFile(file)}\n                        style={{ \n                          background: '#f0f0f0', \n                          border: 'none', \n                          padding: '2px 5px', \n                          borderRadius: '3px',\n                          cursor: 'pointer'\n                        }}\n                      >\n                        下载\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <pre><code>{generatedCode.files[0].content}</code></pre>\n            </div>\n          ) : (\n            <pre><code>// 点击\"生成代码\"按钮生成代码</code></pre>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CodeGeneration; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,SAASC,cAAcA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC;IAC7CY,EAAE,EAAE,wBAAwB;IAC5BC,KAAK,EAAE,QAAQ;IACfC,WAAW,EAAE,iCAAiC;IAC9CC,MAAM,EAAE,QAAQ;IAChBC,eAAe,EAAE,CACf;MACEJ,EAAE,EAAE,mBAAmB;MACvBE,WAAW,EAAE;IACf,CAAC,EACD;MACEF,EAAE,EAAE,qBAAqB;MACzBE,WAAW,EAAE;IACf,CAAC,EACD;MACEF,EAAE,EAAE,oBAAoB;MACxBE,WAAW,EAAE;IACf,CAAC,EACD;MACEF,EAAE,EAAE,mBAAmB;MACvBE,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC;IAC3CuB,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,OAAO;IAClBC,YAAY,EAAE,IAAI;IAClBC,oBAAoB,EAAE;EACxB,CAAC,CAAC;EAEF,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACnB,SAAS,IAAI,CAACE,WAAW,EAAE;IAEhCU,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEM;MACAQ,UAAU,CAAC,MAAM;QACf,MAAMC,iBAAiB,GAAG;UACxBN,QAAQ,EAAE,QAAQ;UAClBO,KAAK,EAAE,CACL;YACEC,IAAI,EAAE,QAAQ;YACdC,OAAO,EAAE;AACvjBC,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACY,CAAC,EACD;YACED,IAAI,EAAE,kBAAkB;YACxBC,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;UACY,CAAC,EACD;YACED,IAAI,EAAE,oBAAoB;YAC1BC,OAAO,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACY,CAAC;QAEL,CAAC;QACDd,gBAAgB,CAACW,iBAAiB,CAAC;QACnCT,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,O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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}